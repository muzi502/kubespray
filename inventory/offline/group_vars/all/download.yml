---
# This file copy from roles/download/default/main.yml

# Define upstream image registry domain and project to local private registry
# gcr_image_repo: "gcr.io"
# kube_image_repo: "k8s.gcr.io"
# docker_image_repo: "docker.io"
# quay_image_repo: "quay.io"
image_registry_domain: ""
image_registry_project: "library"
gcr_image_repo: "{{ image_registry_domain }}/{{ image_registry_project }}"
kube_image_repo: "{{ image_registry_domain }}/{{ image_registry_project }}"
docker_image_repo: "{{ image_registry_domain }}/{{ image_registry_project }}"
quay_image_repo: "{{ image_registry_domain }}/{{ image_registry_project }}"

# Define components version and images tag
kube_version: "v1.19.6"
calico_version: "v3.16.8"
multus_version: "v3.6.2"
pod_infra_version: "3.2"
nginx_image_tag: "1.19"
dnsautoscaler_version: "1.8.1"
coredns_version: "1.6.7"
haproxy_image_tag: "2.3"
crictl_version: "v1.19.0"

## Download config
image_arch: "{{host_architecture | default('amd64')}}"
kubelet_download_url: "{{ download_url }}/files/kubelet-{{ kube_version }}-{{ image_arch }}"
kubectl_download_url: "{{ download_url }}/files/kubectl-{{ kube_version }}-{{ image_arch }}"
kubeadm_download_url: "{{ download_url }}/files/kubeadm-{{ kube_version }}-{{ image_arch }}"
etcd_download_url: "{{ download_url }}/files/etcd-v3.4.13-linux-{{ image_arch }}.tar.gz"
cni_download_url: "{{ download_url }}/files/cni-plugins-linux-{{ image_arch }}-v0.8.7.tgz"
calico_ctl_version: "{{ calico_version }}"
calicoctl_download_url: "{{ download_url }}/files/calicoctl-linux-{{ image_arch }}-{{ calico_ctl_version }}"
crictl_download_url: "{{ download_url }}/files/crictl-{{ crictl_version }}-linux-{{ image_arch }}.tar.gz"

# Define components image repo, name, tag
nginx_image_repo: "{{ docker_image_repo }}/nginx"
kube_proxy_image_repo: "{{ kube_image_repo }}/kube-proxy"
kube_apiserver_image_repo: "{{ release_image_repo }}/kube-apiserver"
kube_scheduler_image_repo: "{{ release_image_repo }}/kube-scheduler"
kube_controller_manager_image_repo: "{{ release_image_repo }}/kube-controller-manager"

calico_cni_version: "{{ calico_version }}"
calico_policy_version: "{{ calico_version }}"
calico_node_image_repo: "{{ docker_image_repo }}/calico-node"
calico_node_image_tag: "{{ calico_version }}"
calico_cni_image_repo: "{{ docker_image_repo }}/calico-cni"
calico_cni_image_tag: "{{ calico_cni_version }}"
calico_policy_image_repo: "{{ docker_image_repo }}/calico-kube-controllers"
calico_policy_image_tag: "{{ calico_policy_version }}"

pod_infra_image_repo: "{{ kube_image_repo }}/pause"
pod_infra_image_tag: "{{ pod_infra_version }}"

multus_image_repo: "{{ release_image_repo }}/multus-cni"
multus_image_tag: "{{ multus_version }}"

dnsautoscaler_image_repo: "{{ kube_image_repo }}/cluster-proportional-autoscaler-{{ image_arch }}"
dnsautoscaler_image_tag: "{{ dnsautoscaler_version }}"

coredns_image_repo: "{{ docker_image_repo }}/coredns-coredns"
coredns_image_tag: "{{ coredns_version }}"

# Generate images list for build offline package
nginx_image_name: "{{ nginx_image_repo }}:{{ nginx_image_tag }}"
pod_infra_image_name: "{{ pod_infra_image_repo }}:{{ pod_infra_image_tag }}"
coredns_image_name: "{{ coredns_image_repo }}:{{ coredns_image_tag }}"
dnsautoscaler_image_name: "{{ dnsautoscaler_image_repo }}:{{ dnsautoscaler_image_tag }}"
kube_proxy_image_name: "{{ kube_proxy_image_repo }}:{{ kube_version }}"
kube_apiserver_image_name: "{{ kube_apiserver_image_repo }}:{{ kube_version }}"
kube_scheduler_image_name: "{{ kube_scheduler_image_repo }}:{{ kube_version }}"
kube_controller_manager_image_name: "{{ kube_controller_manager_image_repo }}:{{ kube_version }}"
multus_image_name: "{{ multus_image_repo }}:{{ multus_image_tag }}"
calico_policy_image_name: "{{ calico_policy_image_repo }}:{{ calico_policy_image_tag }}"
calico_cni_image_name: "{{ calico_cni_image_repo }}:{{ calico_cni_image_tag }}"
calico_node_image_name: "{{ calico_node_image_repo }}:{{ calico_node_image_tag }}"
keepalived_image_name: "{{ keepalived_vip_repo }}:{{ keepalived_vip_tag }}"
